
------------------------ HOMEWORK 1 DIMENSIONAL DATA MODELING
SELECT * FROM ACTOR_FILMS;


----- CREATE A DDL FUNCTION CALLED FILMS IN STRUCT DATA TYPE FOR EVERY ACTOR
DROP TYPE IF EXISTS FILMS;
DROP TABLE IF EXISTS ACTORS;

CREATE TYPE FILMS AS (
    FILM TEXT,
    VOTES REAL,
    RATING INTEGER,
    FILM_ID TEXT
);


CREATE TYPE SCORING_CLASS AS ENUM (
    'STAR',
    'GOOD',
    'AVERAGE',
    'BAD');


------------------- DDL TO POPULATE TABLE OF ACTORS ONE YEAR AT A TIME
CREATE TABLE ACTORS (
    ACTOR TEXT,
    ACTORID TEXT,
    FILM FILMS[],              -- Assumes FILMS is a defined composite type
--     SCORING_CLASS SCORING_CLASS, -- Assumes SCORING_CLASS is a defined type
    YEAR REAL
--     IS_ACTIVE BOOLEAN
);

SELECT * FROM ACTORS;

INSERT INTO ACTORS (
WITH YESTERDAY AS (
    SELECT * FROM actor_films WHERE YEAR = 1981
),
TODAY AS (
    SELECT * FROM actor_films WHERE YEAR = 1982
)
SELECT
    COALESCE(T.actor,Y.actor) AS ACTOR,
    COALESCE(T.actorid, Y.actorid) AS ACTOR_ID,

    CASE
        WHEN Y.FILM IS NULL THEN
            ARRAY[ROW(T.FILM, T.VOTES, T.RATING, T.FILMID)::FILMS]
        WHEN T.FILM IS NOT NULL THEN
            ARRAY[ROW(T.FILM, T.VOTES, T.RATING, T.FILMID)::FILMS] || Y.FILM
        ELSE
            Y.FILM
    END AS FILM,

    COALESCE(T.year, Y.year) AS YEAR

FROM TODAY T
FULL OUTER JOIN YESTERDAY Y
ON T.ACTORID = Y.ACTORID
AND T.filmid = Y.filmid);


